<?xml version="1.0" encoding="UTF-8"?>
<api context="/ceridian" name="CeridianDemoAPI" xmlns="http://ws.apache.org/ns/synapse">
    <resource methods="GET" uri-template="/employees">
        <inSequence>
            <ceridiandayforce.init>
                <username>{get-property('env','ceridianUsername')}</username>
                <password>{get-property('env','ceridianPassword')}</password>
                <clientNamespace>{get-property('env','ceridianClientNS')}</clientNamespace>
                <httpRequestTimeout>10000</httpRequestTimeout>
                <apiVersion>{get-property('env','ceridianAPIVersion')}</apiVersion>
            </ceridiandayforce.init>
            <ceridiandayforce.getEmployees/>
            <send/>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </resource>
    <resource methods="GET" uri-template="/employee/details/{xref}">
        <inSequence>
            <log level="custom">
                <property expression="get-property('env','ceridianUsername')" name="ceridian.username"/>
                <property expression="get-property('env','ceridianPassword')" name="ceridian.password"/>
                <property expression="get-property('env','ceridianClientNS')" name="ceridian.client.ns"/>
                <property expression="get-property('env','ceridianAPIVersion')" name="ceridian.api.version"/>
            </log>
            <ceridiandayforce.init>
                <username>{get-property('env','ceridianUsername')}</username>
                <password>{get-property('env','ceridianPassword')}</password>
                <clientNamespace>{get-property('env','ceridianClientNS')}</clientNamespace>
                <apiVersion>{get-property('env','ceridianAPIVersion')}</apiVersion>
            </ceridiandayforce.init>
            <ceridiandayforce.getEmployeeDetails>
                <xRefCode>{get-property('uri.var.xref')}</xRefCode>
            </ceridiandayforce.getEmployeeDetails>
            <send/>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </resource>
    <resource methods="GET" uri-template="/employee/contacts/{xref}">
        <inSequence>
            <log level="custom">
                <property expression="get-property('env','ceridianUsername')" name="ceridian.username"/>
                <property expression="get-property('env','ceridianPassword')" name="ceridian.password"/>
                <property expression="get-property('env','ceridianClientNS')" name="ceridian.client.ns"/>
                <property expression="get-property('env','ceridianAPIVersion')" name="ceridian.api.version"/>
            </log>
            <ceridiandayforce.init>
                <username>{get-property('env','ceridianUsername')}</username>
                <password>{get-property('env','ceridianPassword')}</password>
                <clientNamespace>{get-property('env','ceridianClientNS')}</clientNamespace>
                <apiVersion>{get-property('env','ceridianAPIVersion')}</apiVersion>
            </ceridiandayforce.init>
            <ceridiandayforce.getEmployeeContacts>
                <xRefCode>{get-property('uri.var.xref')}</xRefCode>
            </ceridiandayforce.getEmployeeContacts>
            <send/>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </resource>
    <resource methods="GET" uri-template="/employee/addresses/{xref}">
        <inSequence>
            <log level="custom">
                <property expression="get-property('env','ceridianUsername')" name="ceridian.username"/>
                <property expression="get-property('env','ceridianPassword')" name="ceridian.password"/>
                <property expression="get-property('env','ceridianClientNS')" name="ceridian.client.ns"/>
                <property expression="get-property('env','ceridianAPIVersion')" name="ceridian.api.version"/>
            </log>
            <ceridiandayforce.init>
                <username>{get-property('env','ceridianUsername')}</username>
                <password>{get-property('env','ceridianPassword')}</password>
                <clientNamespace>{get-property('env','ceridianClientNS')}</clientNamespace>
                <apiVersion>{get-property('env','ceridianAPIVersion')}</apiVersion>
            </ceridiandayforce.init>
            <ceridiandayforce.getEmployeeAddresses>
                <xRefCode>{get-property('uri.var.xref')}</xRefCode>
            </ceridiandayforce.getEmployeeAddresses>
            <send/>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </resource>
    <resource methods="GET" uri-template="/employee/properties/{xref}">
        <inSequence>
            <log level="custom">
                <property expression="get-property('env','ceridianUsername')" name="ceridian.username"/>
                <property expression="get-property('env','ceridianPassword')" name="ceridian.password"/>
                <property expression="get-property('env','ceridianClientNS')" name="ceridian.client.ns"/>
                <property expression="get-property('env','ceridianAPIVersion')" name="ceridian.api.version"/>
            </log>
            <ceridiandayforce.init>
                <username>{get-property('env','ceridianUsername')}</username>
                <password>{get-property('env','ceridianPassword')}</password>
                <clientNamespace>{get-property('env','ceridianClientNS')}</clientNamespace>
                <apiVersion>{get-property('env','ceridianAPIVersion')}</apiVersion>
            </ceridiandayforce.init>
            <ceridiandayforce.getEmployeeProperties>
                <xRefCode>{get-property('uri.var.xref')}</xRefCode>
            </ceridiandayforce.getEmployeeProperties>
            <send/>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </resource>
    <resource methods="GET" uri-template="/employee/combine/{xref}">
        <inSequence>
            <ceridiandayforce.init>
                <username>{get-property('env','ceridianUsername')}</username>
                <password>{get-property('env','ceridianPassword')}</password>
                <clientNamespace>{get-property('env','ceridianClientNS')}</clientNamespace>
                <apiVersion>{get-property('env','ceridianAPIVersion')}</apiVersion>
            </ceridiandayforce.init>
            <clone id="CLONE_01">
                <target>
                    <sequence>
                        <property name="SubElement" scope="default" type="STRING" value="details"/>
                        <sequence key="get-sub-element-sequence"/>
                    </sequence>
                </target>
                <target>
                    <sequence>
                        <property name="SubElement" scope="default" type="STRING" value="properties"/>
                        <sequence key="get-sub-element-sequence"/>
                    </sequence>
                </target>
                <target>
                    <sequence>
                        <property name="SubElement" scope="default" type="STRING" value="addresses"/>
                        <sequence key="get-sub-element-sequence"/>
                    </sequence>
                </target>
                <target>
                    <sequence>
                        <property name="SubElement" scope="default" type="STRING" value="contacts"/>
                        <sequence key="get-sub-element-sequence"/>
                    </sequence>
                </target>
            </clone>
            <log level="custom">
                <property name="getEmployeeDetails" value="out sequence"/>
            </log>
            <property name="dut" scope="default" type="STRING" value=""/>
            <aggregate id="CLONE_01">
                <completeCondition>
                    <messageCount max="-1" min="-1"/>
                </completeCondition>
                <onComplete aggregateElementType="root" expression="json-eval($)">
                    <log level="custom">
                        <property expression="json-eval($)" name="AggregatedResponse"/>
                    </log>
                    <respond/>
                </onComplete>
            </aggregate>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </resource>
</api>
